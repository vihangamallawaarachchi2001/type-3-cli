import fs from "fs-extra";
import path from "path";

export async function generatePackageJson(answers, projectPath) {
  const dependencies = ["express", "dotenv", "cors", "cookie-parser", "helmet"];
  const devDependencies = ["nodemon", "eslint"];

  if (answers.language === "TypeScript") {
    devDependencies.push("typescript", "ts-node", "@types/node", "@types/express");
  }

  if (answers.database === "MongoDB") dependencies.push("mongoose");
  if (["MySQL", "PostgreSQL"].includes(answers.database)) {
    dependencies.push("sequelize");
    if (answers.database === "MySQL") dependencies.push("mysql2");
    if (answers.database === "PostgreSQL") dependencies.push("pg", "pg-hstore");
  }

  if (answers.includeAuth) dependencies.push("jsonwebtoken", "bcryptjs");
  if (answers.includeLog) dependencies.push("winston", "morgan");

  const packageJson = {
    name: answers.projectName,
    version: "1.0.0",
    description: "üöÄ Generated by create-type-3 CLI üõ†Ô∏è",
    main: answers.language === "TypeScript" ? "dist/server.js" : "src/server.js",
    scripts: {
      start: answers.language === "TypeScript" ? "node dist/server.js" : "node src/server.js",
      dev: answers.language === "TypeScript" ? "nodemon src/server.ts" : "nodemon src/server.js",
      lint: "eslint . --fix",
    },
    dependencies: {},
    devDependencies: {},
  };

  await fs.writeFile(path.join(projectPath, "package.json"), JSON.stringify(packageJson, null, 2));
}